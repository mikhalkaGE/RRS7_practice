{
	"info": {
		"_postman_id": "053c59c9-169e-45d2-82e5-870b2f18712f",
		"name": "1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24569775"
	},
	"item": [
		{
			"name": "1",
			"item": [
				{
					"name": "1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status message is ok\", function() {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка формата JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"The response has a Content-Type = application/json\", function() {\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"The response has a Connection = keep-alive\", function() {\r",
									"    pm.response.to.be.header(\"Connection\", \"keep-alive\");\r",
									"});\r",
									"\r",
									"// schema1 = pm.environment.get(\"schema\");\r",
									"// pm.test('Проверка соответствия ключей', function () {\r",
									"//     const responseJson = pm.response.json();\r",
									"//     const expectedKeys = pm.environment.get(\"schema\");\r",
									"//     const expectedKeys1 = Object.keys(expectedKeys)\r",
									"//     const actualKeys = Object.keys(responseJson);\r",
									"//     pm.expect(actualKeys).to.equal(expectedKeys1);\r",
									"// });\r",
									"\r",
									"pm.test(\"Check that the date have detail = Unauthorized\", function() {\r",
									"    const jsonDate = pm.response.json();\r",
									"    pm.expect(jsonDate[\"data\"][0][\"company_status\"]).to.equal(\"ACTIVE\")\r",
									"    pm.expect(jsonDate[\"meta\"].limit).to.equal(2)\r",
									"    \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/?status=ACTIVE&limit=2&offset=1&total=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "status",
									"value": "ACTIVE"
								},
								{
									"key": "limit",
									"value": "2"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "total",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json()\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Status message is ok\", function() {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка формата JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"The response has a Content-Type = application/json\", function() {\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"The response has a Connection = keep-alive\", function() {\r",
									"    pm.response.to.be.header(\"Connection\", \"keep-alive\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check\", function() {\r",
									"    const request1 = JSON.parse(pm.request.body.raw);\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response[\"first_name\"]).to.equal(request1[\"first_name\"]);\r",
									"    \r",
									"});\r",
									"\r",
									"pm.environment.set(\"user_id\", responseData[\"user_id\"]);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"{{$randomFirstName}}\",\r\n  \"last_name\": \"{{$randomLastName}}\",\r\n  \"company_id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"David\",\r\n  \"last_name\": \"Denis\",\r\n  \"company_id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/{{user_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"{{$randomFirstName}}\",\r\n  \"last_name\": \"{{$randomLastName}}\",\r\n  \"company_id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/{{user_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"David\",\r\n  \"last_name\": \"Denis\",\r\n  \"company_id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/{{user_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "6",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/{{user_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"David\",\r\n  \"last_name\": \"Denis\",\r\n  \"company_id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/{{user_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json()\r",
									"pm.environment.set(\"x-token\", responseData[\"token\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"login\": \"{{$randomFirstName}}\",\r\n  \"password\": \"qwerty12345\",\r\n  \"timeout\": {{$randomInt}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/authorize",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-token",
								"value": "{{x-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"login\": \"Denis\",\r\n  \"password\": \"qwerty12345\",\r\n  \"timeout\": 360\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "https://send-request.me/api/auth/me",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "x-token",
								"value": "bb8cdefc14e0a295c81f39119a6e961d"
							}
						],
						"url": {
							"raw": "https://send-request.me/api/auth/me",
							"protocol": "https",
							"host": [
								"send-request",
								"me"
							],
							"path": [
								"api",
								"auth",
								"me"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "https://send-request.me/api/auth/me",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "x-token",
						"value": "4634634634"
					}
				],
				"url": {
					"raw": "https://send-request.me/api/auth/me",
					"protocol": "https",
					"host": [
						"send-request",
						"me"
					],
					"path": [
						"api",
						"auth",
						"me"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "x-token",
			"value": ""
		}
	]
}